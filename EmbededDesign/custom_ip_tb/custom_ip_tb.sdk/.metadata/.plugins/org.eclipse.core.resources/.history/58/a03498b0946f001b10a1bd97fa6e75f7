/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "led_driver.h"
#include "xparameters.h"
#include <unistd.h>
#include "xil_io.h"
#include "xscugic.h"
#include "xgpio.h"
#include "xil_exception.h"


#define BTNS_DEVICE_ID XPAR_BUTTONS_DEVICE_ID
#define SWS_DEVICE_ID XPAR_SWITCHES_DEVICE_ID
#define LED_ADDR XPAR_LED_DRIVER_0_S_AXI_BASEADDR

#define INTC_GPIO_INTERRUPT_ID XPAR_FABRIC_BUTTONS_IP2INTC_IRPT_INTR
#define INTC_DEVICE_ID XPAR_PS7_SCUGIC_0_DEVICE_ID
#define BTN_INT XGPIO_IR_CH1_MASK

XGpio  BTNInst, SWSInst;
int main()
{
	init_platform();
	print("load i = 0,...,9\n\r");
	int i;
	for (i=0; i<10; i++) {
		// write i to led_drv, write slvreg0
		LED_DRIVER_mWriteReg(LED_ADDR, 0, i);
		// read confirm content
		xil_printf("%x\r\n", (unsigned int)
				LED_DRIVER_mReadReg(LED_ADDR, 0));
		sleep(1);
	}

	print("circular right shift\n\r");
	for (i=0; i<10; i++){
		// shift led_drv reg, a write to slvreg1
		LED_DRIVER_mWriteReg(LED_ADDR, 4, 0);
		// read slv_reg2 connects to led_drv reg
		xil_printf("%x\r\n", (unsigned int)
		LED_DRIVER_mReadReg(LED_ADDR, 8));
		sleep(1);
	}
	cleanup_platform();
	return 0;
}
